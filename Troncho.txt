def displayAndList(miembros, restriccion):
    lista = []
    i = 1 #index
    for item in miembros:
        if restriccion == 0: # Distrito u horas
            if len(item) == 0:
                print(str(i) + "\t--Indefinido--")
            else:
                print(str(i) + "\t" + item)
        elif restriccion == 1: # Tipo de actividad
            if len(item) == 0:
                print(str(i) + "\t--Indefinido--")
            else:
                print(str(i) + "\t" + item[23:])
        elif restriccion == 2: # Tipo de audiencia
            if len(item) == 0:
                print(str(i) + "\t--Indefinido--")
            else:
                print(str(i) + "\t" + item[9:])
        i = i + 1
        
        lista.append(item) # Aniadimos todos los elementos de miembros en la lista
        
    return lista

def displayActividad(campos):
    i = 1
    for item in campos:
        if i == 10: # Tipo de actividad
            print(str(i) + ". " + item[23:])
        elif i == 11: # Tipo/s de audiencia
            audienciasSeparadas = item.split(",")
            string = ""
            for cadena in audienciasSeparadas:
                string = string + cadena[9:] + "/" # Para un display mas friendly
            print(str(i) + ". " + string[:len(string) - 1])
        else:
            print(str(i) + ". " + item)
        i = i + 1

def checkCorrectness(lista, caso):
    inputCorrecto = False
    while not inputCorrecto:
        elemento = input('\nIntroduce el numero del '+ caso + ": ")
        try:
            elemento = lista[int(elemento) - 1]
            inputCorrecto = True
        except:
            print("\nError. Introduce un numero correcto.") # Necesitamos numeros
    return elemento

def rellenarLista(linea):
    lista = []
    lista.append(linea[1])                                             # Titulo
    lista.append(linea[7] + " - " + linea[8])                          # Fecha inicio y fin
    lista.append(linea[5])                                             # DIAS-SEMANA
    lista.append(linea[6])                                             # DIAS-EXCLUIDOS
    lista.append(linea[9])                                             # Hora
    lista.append(linea[10])                                            # Description
    lista.append(linea[15])                                            # NOMBRE-INSTALACION
    lista.append(linea[18])                                            # Longuitud
    lista.append(linea[19])                                            # Latitud
    lista.append(linea[21])                                            # Tipo
    lista.append(linea[22])                                            # Audiencia
   
    return lista

def leerAlmacenar(entrada):
    distritos = {}
    i = 0
    for linea in entrada:
        listaCampos = rellenarLista(linea) # Campos de la actividad para mostrar
        listaActividades = []
        listaActividades.append(listaCampos)
        horarios = {}
        horarios[linea[9]] = listaActividades
        audienciasString = linea[22].split(",")
        if i != 0: # Omitir primera linea
            if distritos.get(linea[20]) == None:
                # No existe el distrito de esta actividad.
                audiencias = {}
                for aud in audienciasString:
                    audiencias[aud] = horarios
                #audiencias[aud]["hola"] = "adios" # Para ver como falla
                tipoActividad = {}
                tipoActividad[linea[21]] = audiencias
                distritos[linea[20]] = tipoActividad
            else:
                # Existe el distrito de esta actividad.
                if distritos[linea[20]].get(linea[21]) == None:
                    # No existe el tipo de actividad de esta actividad en este distrito.
                    audiencias = {}
                    for aud in audienciasString:
                        audiencias[aud] = horarios
                    distritos[linea[20]][linea[21]] = audiencias
                else:
                    # Existe el tipo de actividad de esta actividad en este distrito.
                    existia = False
                    for aud in audienciasString:
                        if distritos[linea[20]][linea[21]].get(aud) == None:
                            # No existe el tipo de audiencia de esta actividad en este distrito y este tipo de actividad.
                            distritos[linea[20]][linea[21]][aud] = horarios
                        else:
                            # Existe el tipo de audiencia de esta actividad en este distrito y este tipo de actividad.
                            if distritos[linea[20]][linea[21]][aud].get(linea[9]) == None:
                                # No existe otra actividad del mismo tipo de audiencia, tipo de actividad y distrito con este horario.
                                distritos[linea[20]][linea[21]][aud][linea[9]] = listaActividades # ESTA LINEA LO METE PARA EL PRIMER AUD Y PARA TODOS LOS SIGUIENTES
                            elif existia == False:
                                # Existe otra actividad del mismo tipo de audiencia, tipo de actividad y distrito con este horario.
                                distritos[linea[20]][linea[21]][aud][linea[9]].append(listaCampos)
                            existia = True
        i = i + 1
    return distritos

def busqueda(mapa):
    print("Distritos almacenados:\n")

    lista = displayAndList(mapa.keys(), 0) # Ensenia las posibilidades y las guarda en una lista

    distrito = checkCorrectness(lista, "distrito"); # Pide el num hasta que sea un formato correcto

    print("\nTipos de actividades almacenadas para el distrito " + distrito + ":\n")

    lista = displayAndList(mapa[distrito].keys(), 1) # Ensenia las posibilidades y guarda en lista

    actividad = checkCorrectness(lista, "tipo de actividad")

    print("\nTipos de audiencia para el tipo de actividad " + actividad[23:] + " para el distrito " + distrito + ".\n")

    lista = displayAndList(mapa[distrito][actividad].keys(), 2) # Ensenia posibilidades y guarda en lista 

    audiencia = checkCorrectness(lista, "tipo de audiencia")

    print("\nEstos son los horarios para el tipo de audiencia " + audiencia[9:] 
          + " para el tipo de actividad " + actividad[23:] + " para el distrito " + distrito + ":\n")

    if mapa[distrito][actividad].get("") == None:
        mapaFinal = mapa[distrito][actividad][audiencia]
    else:
        mapaFinal = {}
        for elemento in mapa[distrito][actividad][""]:
            mapaFinal[elemento] = mapa[distrito][actividad][""][elemento]
        for elemento in mapa[distrito][actividad][audiencia]:
            if mapaFinal.get(elemento) == None:
                mapaFinal[elemento] = mapa[distrito][actividad][audiencia][elemento]
            else:
                for evento in mapa[distrito][actividad][audiencia][elemento]:
                    mapaFinal[elemento].append(evento)
    
    lista = displayAndList(mapaFinal.keys(), 0)

    hora = checkCorrectness(lista, "horario")
    
    print("")
    
    i = 1
    for item in mapaFinal[hora]:
        print("Actividad " + str(i) + ":\n")
        displayActividad(item)
        print("\n------------------------------------------------\n")
        i = i + 1
        
#TODO intervalos, audiencia inexistente, distrito inexistente, tipo de actividad inexistente

import csv
csvarchivo = open('AgendaPrueba.csv',encoding="utf8",errors='ignore')
entrada = csv.reader(csvarchivo, delimiter=";")
mapaDistritos = leerAlmacenar(entrada) # Almacena todo en una estructura de diccionarios 
busqueda(mapaDistritos)